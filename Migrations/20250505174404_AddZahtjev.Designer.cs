// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ZR_Banka.Models;

#nullable disable

namespace ZR_Banka.Migrations
{
    [DbContext(typeof(ZrBankaDbContext))]
    [Migration("20250505174404_AddZahtjev")]
    partial class AddZahtjev
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ZR_Banka.Models.Korisnik", b =>
                {
                    b.Property<int>("IdKorisnik")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_korisnik");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdKorisnik"));

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("ime");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("mail");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("password");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)")
                        .HasColumnName("prezime");

                    b.Property<string>("Uloga")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)")
                        .HasColumnName("uloga");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("username");

                    b.HasKey("IdKorisnik")
                        .HasName("Korisnik_pkey");

                    b.ToTable("Korisnik", (string)null);
                });

            modelBuilder.Entity("ZR_Banka.Models.Kredit", b =>
                {
                    b.Property<int>("IdKredit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_kredit");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdKredit"));

                    b.Property<DateOnly>("DatumPozajmice")
                        .HasColumnType("date")
                        .HasColumnName("datum_pozajmice");

                    b.Property<decimal>("Glavnica")
                        .HasColumnType("numeric")
                        .HasColumnName("glavnica");

                    b.Property<int?>("IdKorisnik")
                        .HasColumnType("integer")
                        .HasColumnName("id_korisnik");

                    b.Property<decimal>("KamatnaStopa")
                        .HasPrecision(4, 2)
                        .HasColumnType("numeric(4,2)")
                        .HasColumnName("kamatna_stopa");

                    b.Property<bool>("StatusKredita")
                        .HasColumnType("boolean")
                        .HasColumnName("status_kredita");

                    b.Property<decimal>("UkupanIznos")
                        .HasColumnType("numeric");

                    b.Property<int>("VrijemeOtplate")
                        .HasColumnType("integer")
                        .HasColumnName("vrijeme_otplate");

                    b.Property<string>("VrstaKredita")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("vrsta_kredita");

                    b.HasKey("IdKredit")
                        .HasName("Kredit_pkey");

                    b.HasIndex("IdKorisnik");

                    b.ToTable("Kredit", (string)null);
                });

            modelBuilder.Entity("ZR_Banka.Models.Uplata", b =>
                {
                    b.Property<int>("IdUplate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_uplate");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdUplate"));

                    b.Property<DateOnly>("DatumUplate")
                        .HasColumnType("date")
                        .HasColumnName("datum_uplate");

                    b.Property<int?>("IdKredit")
                        .HasColumnType("integer")
                        .HasColumnName("id_kredit");

                    b.Property<decimal?>("PreostaliDug")
                        .HasPrecision(7, 2)
                        .HasColumnType("numeric(7,2)")
                        .HasColumnName("preostali_dug");

                    b.Property<decimal>("Uplata_novac")
                        .HasPrecision(6, 2)
                        .HasColumnType("numeric(6,2)")
                        .HasColumnName("uplata");

                    b.HasKey("IdUplate")
                        .HasName("Uplata_pkey");

                    b.ToTable("Uplata");
                });

            modelBuilder.Entity("ZR_Banka.Models.Zahtjev", b =>
                {
                    b.Property<int>("IdZahtjev")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdZahtjev"));

                    b.Property<int>("IdKorisnik")
                        .HasColumnType("integer")
                        .HasColumnName("id_korisnik");

                    b.Property<DateTime>("datum_zahtjeva")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("datum_zahtjeva");

                    b.Property<decimal>("iznos")
                        .HasColumnType("numeric")
                        .HasColumnName("iznos");

                    b.Property<bool>("status_zahtjeva")
                        .HasColumnType("boolean")
                        .HasColumnName("status_zahtjeva");

                    b.Property<DateTime>("vrijeme_otplate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("vrijeme_otplate");

                    b.Property<string>("vrsta_kredita")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("vrsta_kredita");

                    b.HasKey("IdZahtjev")
                        .HasName("Zahtjev_pkey");

                    b.ToTable("Zahtjev");
                });

            modelBuilder.Entity("ZR_Banka.Models.Kredit", b =>
                {
                    b.HasOne("ZR_Banka.Models.Korisnik", "IdKorisnikNavigation")
                        .WithMany("Kredit")
                        .HasForeignKey("IdKorisnik")
                        .HasConstraintName("id_korisnik");

                    b.Navigation("IdKorisnikNavigation");
                });

            modelBuilder.Entity("ZR_Banka.Models.Korisnik", b =>
                {
                    b.Navigation("Kredit");
                });
#pragma warning restore 612, 618
        }
    }
}
